@using NodeTreeCms.Models
@{
    var documentNode = (DocumentNode)Model;
}

<link href="/Contents/Styles/basicstyle.css" rel="stylesheet" type="text/css" />

    <ul class="topnavigation">
    <pre>Top navigation:</pre>
    @foreach(var c in documentNode.AncestorAtLevel(0).Children)
    {
        <li>
            @if (documentNode.IsDescendantOrSameAs(c))
            {
                <a href="@c.Url" class="selected">@c.Name</a>
            }
            else
            {
                <a href="@c.Url">@c.Name</a>
            }
        </li>
    }
    </ul>

<div class="second-navigation">
<pre>Second navigation:</pre>
@{
    Action<IDocumentNode> traverse = null;
    var tree = "";
    traverse = (n) =>
    {
        if (n.Children.Count > 0)
        {
            tree += "<ul>";
            foreach (var c in n.Children)
            {
                if (documentNode.IsDescendantOrSameAs(c))
                    tree += String.Format("<li><a href=\"{0}\" class=\"selected\">{1}</a>", c.Url, c.Name);
                else
                    tree += String.Format("<li><a href=\"{0}\">{1}</a>", c.Url, c.Name);
                traverse(c);
                tree += "</li>";
            }
            tree += "</ul>";
        }
    };
    var ancestorOrSelf = documentNode.AncestorAtLevel(1);
    if (ancestorOrSelf != null)
    {
        traverse(ancestorOrSelf);
        @Html.Raw(tree)
    }
}
    
</div>

<div class="content">
    <pre>Content:</pre>
    @RenderBody()
</div>
